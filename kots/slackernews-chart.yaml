apiVersion: kots.io/v1beta2
kind: HelmChart
metadata:
  name: slackernews
spec:
  # chart identifies a matching chart from a .tgz
  chart:
    name: slackernews
    chartVersion: $VERSION

  # values are used in the customer environment, as a pre-render step
  # these values will be supplied to helm template
  values:
    # provide the values that would be injected on a Helm install
    global:
      replicated:
        dockerconfigjson: repl{{ LicenseDockerCfg }}

    slack:
      botToken: repl{{ ConfigOption "slack_bot_token" }}
      userToken: repl{{ ConfigOption "slack_user_token" }}
      clientId: repl{{ ConfigOption "slack_clientid" }}
      clientSecret: repl{{ ConfigOption "slack_clientsecret" }}
    slackernews:
      domain: repl{{ ConfigOption "slackernews_domain" }}
    admin-console:
      enabled: false
    replicated:
      enabled: false
      preflights: false
    timescale:
      deploy_timescale: true
      password: repl{{ ConfigOption "timescale_password"}}
    images:
      slackernews:
        pullSecret: repl{{ ImagePullSecretName }}
        repository: '{{repl HasLocalRegistry | ternary LocalRegistryHost "proxy.shortrib.io" }}/{{repl HasLocalRegistry | ternary LocalRegistryNamespace (print "proxy/" (LicenseFieldValue "appSlug") "/ghcr.io/crdant/slackernews" ) }}/slackernews-web'


  optionalValues: 
    - when: '{{repl ConfigOptionEquals "deploy_postgres" "1"}}'
      recursiveMerge: true
      values:
        postgres:
          enabled: true
          password: '{{repl ConfigOption "postgres_password" }}'
        
    - when: '{{repl ConfigOptionNotEquals "deploy_postgres" "1"}}'
      recursiveMerge: true
      values:
        postgres:
          uri: '{{repl ConfigOption "postgres_external_uri" }}'

    - when: '{{repl ConfigOptionEquals "certificate_source" "upload_existing"}}'
      recursiveMerge: true
      values:
        service:
          tls:
            enabled: true
            cert: repl{{ ConfigOptionData "tls_cert" | nindent 14 }}
            key: repl{{ ConfigOptionData "tls_key" | nindent 14 }}
            ca: repl{{ ConfigOptionData "tls_ca" | nindent 14 }}
        
    - when: '{{repl ConfigOptionEquals "certificate_source" "generate_internal"}}'
      recursiveMerge: true
      values:
        service:
          tls:
            enabled: true
            ca: |-
              {{repl $ca := genCA (LicenseFieldValue "customerName") 365 }}
              {{repl $ca.Cert | Base64Encode}}
            cert: |-
              {{repl $cert := genSignedCert (ConfigOption "slackernews_domain") nil (list (ConfigOption "slackernews_domain")) 365 $ca }}
              {{repl $cert.Cert | nindent 14 }}
            key: |-
              {{repl $cert.Key | nindent 14 }}
 
    - when: '{{repl ConfigOptionEquals "access_option" "ingress"}}'
      recursiveMerge: true
      values:
        ingress:
          enabled: true
          annotations: 
            ingress.kubernetes.io/force-ssl-redirect: "true"

    - when: '{{repl ConfigOptionEquals "access_option" "load_balancer"}}'
      recursiveMerge: true
      values:
        nginx:
          enabled: true
        service:
          type: LoadBalancer

    - when: '{{repl ConfigOptionEquals "access_option" "node_port"}}'
      recursiveMerge: true
      values:
        nginx:
          enabled: true
        service:
          type: NodePort


  # builder values provide a way to render the chart with all images
  # and manifests. this is used in replicated to create airgap packages
  builder:
    postgres:
      password: repl{{ ConfigOption "postgres_password"}}
    admin-console:
      enabled: false
