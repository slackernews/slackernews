apiVersion: v1
kind: Secret
metadata:
  name: slackernews-preflight
  labels:
    troubleshoot.sh/kind: preflight
stringData:
  preflight.yaml: |-
    apiVersion: troubleshoot.sh/v1beta2
    kind: Preflight
    metadata:
      name: slackernews-preflight
    spec:
      collectors:
        - clusterInfo: {}
        - clusterResources: {}
        - http:
            collectorName: slack
            get:
              url: https://api.slack.com/methods/api.test
              timeout: 20s
        - http:
            collectorName: helmValuesSlackUserToken
            post:
              url: https://slack.com/api/auth.test
              headers:
                Authorization: Bearer {{.Values.slack.userToken}}
              timeout: 20s
        - http:
            collectorName: helmValuesSlackBotToken
            post:
              url: https://slack.com/api/auth.test
              headers:
                Authorization: Bearer {{.Values.slack.botToken}}
              timeout: 20s

        {{- if and .Values.postgres.enabled
                   (not .Values.postgres.deploy_postgres)
                   (or
                       .Values.postgres.uri
                       (and .Values.postgres.existingSecretName
                            .Values.postgres.existingSecretUriKey))
                   }}
        - postgres:
            collectorName: postgres
            uri: >-
              {{- if (and .Values.postgres.existingSecretName
                          .Values.postgres.existingSecretUriKey)
              }}
                {{/*
                  # todo: add support for existing secret
                  {{ get value of uri key in existing secret }}
                */}}
              {{- else }}
                {{ .Values.postgres.uri }}
              {{- end }}
        {{- end }}
      analyzers:
        - clusterVersion:
            exclude: {{ eq .Values.replicated.isEmbeddedCluster true }}
            outcomes:
            - fail:
                message: This application relies on kubernetes features only present in 1.16.0
                  and later.
                uri: https://kubernetes.io
                when: < 1.16.0
            - warn:
                message: Your cluster is running a version of kubernetes that is out of support.
                uri: https://kubernetes.io
                when: < 1.24.0
            - pass:
                message: Your cluster meets the recommended and reqquired versions of Kubernetes.
        - textAnalyze:
            checkName: Slack Accessible
            fileName: slack.json
            regex: '"status": 200,'
            outcomes:
              - pass:
                  when: "true"
                  message: "Can access the Slack API"
              - fail:
                  when: "false"
                  message: "Cannot access the Slack API. Check that the server can reach the internet and check [status.slack.com](https://status.slack.com)."
        - nodeResources:
            checkName: One node must have 2 GB RAM and 1 CPU Cores
            filters:
              allocatableMemory: 2Gi
              cpuCapacity: "1"
            outcomes:
              - fail:
                  when: count() < 1
                  message: Cannot find a node with sufficient memory and cpu
              - pass:
                  message: Sufficient CPU and memory is available
        - textAnalyze:
            exclude: {{ eq .Values.slack.userToken  "" }}
            checkName: Slack User Token
            fileName: helmValuesSlackUserToken.json
            regex: ok\\":true
            outcomes:
              - fail:
                  when: "false"
                  message: No Valid Slack User token in helm values
              - pass:
                  when: "true"
                  message: Slack User Token valid
        - textAnalyze:
            exclude: {{ eq .Values.slack.botToken  "" }}
            checkName: Slack Bot Token
            fileName: helmValuesSlackBotToken.json
            regex: ok\\":true
            outcomes:
              - fail:
                  when: "false"
                  message: No Valid Slack Bot token in helm values
              - pass:
                  when: "true"
                  message: Slack Bot Token valid

        - postgres:
            exclude: '{{ or (not .Values.postgres.enabled)
                            .Values.postgres.deploy_postgres }}'
            checkName: Postgres Check
            collectorName: postgres
            outcomes:
              - fail:
                  when: connected == false
                  message: Cannot connect to PostgreSQL server
              - fail:
                  when: version < 10.x
                  message: The PostgreSQL server must be at least version 10
              - pass:
                  message: The PostgreSQL server is ready
