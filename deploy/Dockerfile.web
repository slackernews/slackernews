# Use a specific version of node:alpine as the base image
FROM node:20-bookworm-slim AS base
RUN apt-get update && apt-get install -y \
    build-essential \
    python3 \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

# Install dependencies that might be necessary
WORKDIR /app

# Install dependencies based on the lock file present
FROM base AS deps
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm && pnpm i --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi && find .

# Build the application
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Uncomment to disable Next.js telemetry during build
# ENV NEXT_TELEMETRY_DISABLED=1

RUN ["yarn", "build"]

# Set up the production image
FROM cve0.io/node:20.19 AS runner
WORKDIR /app

ENV NODE_ENV=production

# Copy the necessary files from the builder stage
COPY --from=builder --chown=1001:1001 /app/public ./public
COPY --from=builder --chown=1001:1001 /app/.next/standalone ./
COPY --from=builder --chown=1001:1001 /app/.next/static ./.next/static

# Switch to the nextjs user
USER 1001

EXPOSE 3000

# Set required environment variables
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Run the application
CMD ["server.js"]
