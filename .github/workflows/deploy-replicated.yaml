name: deploy-replicated
on:
  push:
    branches:
      - deploy-cmx

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - id: create-cluster
        uses: replicatedhq/compatibility-actions/create-cluster@v1
        with:
          api-token: ${{ secrets.REPLICATED_TOKEN }}
          kubernetes-distribution: k3s
          kubernetes-version: "1.28"
          ttl: 48h
          cluster-name: slackernews-${{ github.run_id }}

      - id: get-current-cluster-id
        uses: marccampbell/cloudflare-dns-action/get-dns-record@v1
        with:
          type: "TXT"
          name: "news-cluster-id.replicated.com"
          token: ${{ secrets.CLOUDFLARE_TOKEN }}
          zoneId: ${{ secrets.CLOUDFLARE_ZONE_ID }}

      - id: set-current-cluster-id
        uses: marccampbell/cloudflare-dns-action/create-dns-record@v1
        with:
          type: "TXT"
          name: "news-cluster-id.replicated.com"
          proxied: false
          content: "${{ steps.create-cluster.outputs.cluster-id }}"
          token: ${{ secrets.CLOUDFLARE_TOKEN }}
          zoneId: ${{ secrets.CLOUDFLARE_ZONE_ID }}

      - id: setup-helm
        uses: azure/setup-helm@v1
        with:
          version: "3.9.0"

      - id: install-ngrok-ingress
        uses: replicatedhq/compatibility-actions/helm-install@v1
        with:
          kubeconfig: ${{ steps.create-cluster.outputs.cluster-kubeconfig }}
          repo-name: ngrok
          repo-url: https://ngrok.github.io/kubernetes-ingress-controller
          chart: ngrok/kubernetes-ingress-controller
          name: 'ngrok-ingress-controller'
          namespace: 'ngrok-ingress-controller'
          helm-path: 'helm'
          values: |
            credentials:
              authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}
              apiKey: ${{ secrets.NGROK_API_KEY }}

      - id: helm-install
        uses: replicatedhq/compatibility-actions/helm-install@v1
        with:
          kubeconfig: ${{ steps.create-cluster.outputs.cluster-kubeconfig }}
          chart: oci://chart.slackernews.io/slackernews/slackernews
          name: 'slackernews'
          namespace: 'slackernews'
          helm-path: 'helm'
          registry-username: ${{ secrets.NEWS_REPLICATED_USERNAME }}
          registry-password: ${{ secrets.NEWS_REPLICATED_PASSWORD }}
          values: |
            postgres:
              deploy_postgres: false
              uri: todo
            slack:
              clientId: todo
              clientSecret: todo
              botToken: todo
              userToken: todo
            slackrnews:
              domain: todo
            service:
              type: ClusterIP
            nginx:
              service:
                type: ClusterIP


      - name: save the kubeconfig as a tmp file
        run: |
          mkdir -p ~/.kube
          echo "${{ steps.create-cluster.outputs.cluster-kubeconfig }}" > ~/.kube/config

      - name: install an ngrok ingress for testing
        run: |
          sed -i "s/\$NGROK_HOST/news.replicated.com/g" ./test/ngrok-ingress.yaml
          kubectl apply -f ./test/ngrok-ingress.yaml

      - id: delete-cluster
        uses: replicatedhq/compatibility-actions/remove-cluster@v1
        with:
          cluster-id: ${{ steps.get-current-cluster-id.outputs.record-content}}
          api-token: ${{ secrets.REPLICATED_TOKEN }}
